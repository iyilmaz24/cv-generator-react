#root {
  width: 100vw;
  height: 100vh;
  margin: 0;
  text-align: center;
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  
  min-height: 850px;
  overflow-y: scroll;
  -webkit-overflow-scrolling: touch;
  --local-height: max(90vh, 90vh);
}

#top-header-div{
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  margin-top: 1rem;
  width: 95%;
}

#logo-text{
  font-size: calc(0.037 * var(--local-height));
  font-weight: bolder;
  letter-spacing: 1.5px;
}

#top-header-buttons-div{
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  > button {
    border: 1px solid black;
    border-radius: 0.8rem;
    padding: 0.3rem 0.6rem;
    font-weight: bold;
    background-color: rgb(30, 219, 103);
    color: #FFFFFF;
  }
  > button:hover{
    transform: scale(1.05);
    background-color: rgb(11, 182, 77);
  }
}

#parent-wrapper{
  display: flex;
  justify-content: space-evenly;
  align-items: center;
  width: 95%;
  height: 90%;
  margin-bottom: 1rem;
}

#left-form{
  margin: 1rem;
  margin-left: 0rem;
  height: 90vh;
  width: 35%;

  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  gap: 1rem;
}

#right-preview{
  margin: 1rem;
  height: 90vh;
  width: 65%;

  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
}

.component-base{
  background-color: #FFFFFF;
}

.component-form{
  padding: 0.9rem;
  border: 1px solid #000000;
  border-radius: 1rem;
  font-size: calc(0.037 * var(--local-height));
  width: min(20vw);
  height: fit-content;
}

.component-preview{
  /* our 'right-preview' wrapper div in App.jsx uses only 90% of screen height, so we must specify local height with variable
  otherwise, 'width' will reference root screen height of 100% while 'height' will reference 'right-preview' wrapper screen height of 90% */
  height: min(var(--local-height));
  /* copy paper is 8.5 * 11 inches in dimension == 0.7727 w to h ratio, using calc below we can maintain realistic paper size for PDF/printing */
  width: calc(0.772 * var(--local-height));

  /* by using calc, we can set a font-size that will dynamically re-size in proportion to the paper's dimensions */
  font-size: calc(0.018 * var(--local-height));
  
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;

}

.form-title{
  display: flex;
  justify-content: center;
  align-items: center;
}


@media only screen and (max-width: 700px) {

  #parent-wrapper{
    display: flex;
    flex-direction: column-reverse;
    justify-content: flex-start;
    align-items: center;
  }
  .component-form {
    font-size: calc(0.02 * var(--local-height));
  }

  #left-form{
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: center;
    flex-wrap: wrap;
    gap: 1rem;
    margin: 0.25rem 0rem 0rem 0rem;

    height: 20%;
    width: 75%;
  }

  #right-preview{
    margin: 1rem;
    height: 100%;
    width: 100%;
  
    display: flex;
    justify-content: center;
    align-items: center;
  }

}

@media screen and (orientation:portrait) {
  #root{
    --mobile-local-height: 90vw;
  }

  .component-form {
    font-size: calc(0.02 * var(--mobile-local-height));
  }

  #logo-text{
    font-size: calc(0.037 * var(--mobile-local-height));
  }

  .component-form{
    padding: 0.9rem;
    font-size: calc(0.037 * var(--mobile-local-height));
  }
  
  .component-preview{
    height: min(var(--mobile-local-height));
    width: calc(0.772 * var(--mobile-local-height));
    font-size: calc(0.018 * var(--mobile-local-height));
  }


}